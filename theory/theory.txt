Данный код выводит "Bad: undefined" 4 раза c интервалом в 3 секунды после запуска.
Это происходит потому, что в коде при инициализации переменной счетчика в цикле for (i) используется ключевое слово var, хотя в современном языке чаще используется ключевое слово let.
Ключевое слово var создает глобальную и функциональную область видимости.
Когда цикл for завершается, переменная i равна 4, и это значение используется во всех 4 вызовах setTimeout, которые выполняются асинхронно.
Так как в массиве arr нет элемента с индексом 4, то обращение к нему возвращает undefined.

Для того, чтобы получить желаемый вывод, можно воспользоваться 2 способами:

1. Вышеупомянутое использование ключевого слова let вместо var. Это создаст блочную область видимости для переменной i, и каждый вызов setTimeout будет иметь свое собственное значение i.

2. Использование замыкания для захвата значения переменной i в каждой итерации цикла for. Нужно обернуть функцию, передаваемую в setTimeout, в другую функцию, которая будет принимать параметром i и возвращать исходную функцию:

const arr = [10, 12, 15, 21];

for (var i = 0; i < arr.length; i++) {
  setTimeout(
    (function (i) {
      return () => {
        console.log(arr[i] > 13 ? `Good: ${arr[i]}` : `Bad: ${arr[i]}`);
      };
    })(i),
    3000
  );
}
